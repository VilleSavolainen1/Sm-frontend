[{"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\index.js":"1","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\App.js":"2","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\profile.js":"3","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\signin.js":"4","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\frontpage.js":"5","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\viewprofile.js":"6","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\register.js":"7","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\navigation.js":"8","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\messageForm.js":"9","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\drawertoggle.js":"10","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\Drawertoggle.js":"11","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\Sidedrawer.js":"12"},{"size":170,"mtime":1612203093804,"results":"13","hashOfConfig":"14"},{"size":5995,"mtime":1614521672798,"results":"15","hashOfConfig":"14"},{"size":4792,"mtime":1614521779432,"results":"16","hashOfConfig":"14"},{"size":1405,"mtime":1614499008823,"results":"17","hashOfConfig":"14"},{"size":1028,"mtime":1613764857691,"results":"18","hashOfConfig":"14"},{"size":2453,"mtime":1614498922493,"results":"19","hashOfConfig":"14"},{"size":2952,"mtime":1614498945710,"results":"20","hashOfConfig":"14"},{"size":4767,"mtime":1614498912622,"results":"21","hashOfConfig":"14"},{"size":2063,"mtime":1614498978993,"results":"22","hashOfConfig":"14"},{"size":539,"mtime":1614006742138,"results":"23","hashOfConfig":"14"},{"size":539,"mtime":1614006742138,"results":"24","hashOfConfig":"14"},{"size":1294,"mtime":1614365171413,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ipcekr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\index.js",[],["54","55"],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\App.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation';\nimport Signin from './components/signin';\nimport Register from './components/register';\nimport WriteMessage from './components/messageForm';\nimport Profile from './components/profile';\nimport FrontPage from './components/frontpage';\nimport View from './components/viewprofile';\nimport axios from 'axios';\n\n\n\nfunction App() {\n\n  let messagesToRender;\n\n  const [route, setRoute] = useState('/home');\n  const [user, setUser] = useState('Vieras');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [post, setPost] = useState(false);\n  const [images, setImages] = useState([]);\n  const [viewprofile, setViewprofile] = useState();\n  const [imageLoaded, setImageloaded] = useState(false);\n  const [profileUpdate, setProfileupdate] = useState(false);\n  const [usersList, setUserslist] = useState();\n  const [loading, setLoading] = useState(false);\n  const [imagemessages, setImagemessages] = useState(null);\n  const [newmessages, setNewmessages] = useState([]);\n  const [messageChecked, setMessagechecked] = useState(false);\n\n\n  let addresses = [];\n  let users = [];\n  let messages = [];\n\n\n\n  useEffect(() => {\n    axios.post('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/unread', { receiver: user })\n      .then(r => setNewmessages(r))\n  }, [user, messageChecked])\n\n\n\n\n  useEffect(() => {\n    axios.get('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/users')\n      .then(u => {\n        users.push(u.data)\n        setUserslist(users)\n        setLoading(true)\n      })\n  }, [user])\n\n\n\n  useEffect(() => {\n    if (user !== 'Vieras' && route !== '/viewprofile') {\n      axios.post('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/imagenames', { username: user })\n        .then(res => {\n          res.data.map(name => {\n            addresses.push('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/images/' + name)\n          })\n          setImages(addresses)\n        })\n    }\n  }, [imageLoaded, user, profileUpdate, loading, route])\n\n\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem(\"loggeduser\");\n    if (loggedUser) {\n      const user = loggedUser;\n      setUser(user);\n    }\n  }, []);\n\n\n  useEffect(() => {\n    setError('');\n  }, [route])\n\n\n  const onRouteChange = (e) => {\n    setRoute(e);\n  }\n\n  const viewUser = async (usr) => {\n    if (usr === user) {\n      setRoute('/profile')\n    } else {\n      await axios.post('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/imagenames', { username: usr })\n        .then(res => {\n          res.data.map(name => {\n            addresses.push('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/images/' + name)\n          })\n          setImages(addresses)\n        })\n      setViewprofile(usr)\n      setRoute('/viewprofile')\n    }\n  }\n\n  function showUsers() {\n    if (loading) {\n      return (\n        usersList[0].map(profile => {\n          return (\n            <i key={profile} onClick={() => viewUser(profile)}>{profile}</i>\n          )\n        })\n      )\n    }\n  }\n\n\n  if (messages) {\n    messagesToRender = messages;\n  } else {\n    messagesToRender = \"Loading...\";\n  }\n\n\n\n  function signIn(e) {\n    e.preventDefault();\n    if (username.length === 0 || password.length === 0) {\n      setError(\"Anna käyttäjänimi ja salasana!\")\n    } else {\n      axios.post('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/signin', { username: username, password: password })\n        .then(res => {\n          if (res.status === 200) {\n            setRoute('/home')\n            setUser(username)\n            localStorage.setItem(\"loggeduser\", username);\n            setUsername('');\n            setPassword('');\n          } else {\n            setError(\"Wrong username or password!\");\n            setUsername('');\n            setPassword('');\n          }\n        })\n        .catch(() => {\n          setUsername('')\n          setPassword('')\n          setError(\"Väärä käyttäjänimi tai salasana!\")\n        })\n    }\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <header id=\"header\">\n        <Navigation user={user} setUser={setUser} onRouteChange={onRouteChange} newmessages={newmessages} messageChecked={messageChecked} setMessagechecked={setMessagechecked} />\n      </header>\n      {user === 'Vieras' && route === '/signin' ?\n        <Signin setUser={setUser} setRoute={setRoute} username={username} setUsername={setUsername} password={password} setPassword={setPassword} setError={setError} signIn={signIn} error={error} /> : null\n      }\n      {user === 'Vieras' && route === '/register' ?\n        <Register setRoute={setRoute} setUser={setUser} setError={setError} /> : null\n      }\n      {route === '/home' ?\n        <div className=\"body-content\">\n          <div className=\"center\">\n            <FrontPage user={user} setRoute={setRoute} />\n            <h1 style={{ fontWeight: 150 }}>Käyttäjät</h1>\n            <div className=\"usersblock\">\n              {showUsers()}\n            </div>\n          </div>\n        </div> : null\n      }\n      {route === '/profile' ?\n        <div className=\"body-content\">\n          <div className=\"center\">\n            <Profile user={user} images={images} imageLoaded={imageLoaded} setImageloaded={setImageloaded} profileUpdate={profileUpdate} setProfileupdate={setProfileupdate} post={post} setPost={setPost} loading={loading} setLoading={setLoading} />\n          </div>\n        </div> : null\n      }\n      {route === '/viewprofile' ?\n        <div className=\"body-content\">\n          <div className=\"center\">\n            < View viewprofile={viewprofile} images={images} user={user} post={post} setPost={setPost} imagemessages={imagemessages} setImagemessages={setImagemessages} />\n          </div>\n        </div>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\profile.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\signin.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\frontpage.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\viewprofile.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\register.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\navigation.js",["62","63"],"import React, { useState } from 'react';\r\nimport './styledComponents.css';\r\nimport Drawertoggle from './SideDrawer/Drawertoggle';\r\nimport Sidedrawer from './SideDrawer/Sidedrawer';\r\nimport axios from 'axios';\r\n\r\nconst Navigation = ({ user, setUser, onRouteChange, newmessages, messageChecked, setMessagechecked }) => {\r\n\r\n    const [showSidebar, setShowsidebar] = useState(false);\r\n    const [showmessageinfo, setShowmessageinfo] = useState(false);\r\n\r\n\r\n    function showMessageSwitch() {\r\n        !showmessageinfo ? setShowmessageinfo(true) : setShowmessageinfo(false)\r\n    }\r\n\r\n    function messageIsChecked(id) {\r\n        axios.post('http://ec2-13-53-201-232.eu-north-1.compute.amazonaws.com:3001/read', { id: id })\r\n        !messageChecked ? setMessagechecked(true) : setMessagechecked(false)\r\n    }\r\n\r\n\r\n    function getNumberOfNewMessages() {\r\n        let count = 0;\r\n        if (newmessages.data) {\r\n            if (newmessages.data.length === 0) {\r\n                return (\r\n                    null\r\n                )\r\n            } else {\r\n                newmessages.data.map(num => {\r\n                    if (num.sender !== num.receiver) {\r\n                        count++;\r\n                    }\r\n                })\r\n            }\r\n            if(count === 0){\r\n                return null\r\n            }else{\r\n                return count;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    function getNewMessageInfo() {\r\n        if (newmessages.data) {\r\n            return (\r\n                newmessages.data.map(info => {\r\n                    if (info.sender !== info.receiver) {\r\n                        return (\r\n                            <ul key={info.id}>\r\n                                <li style={{ listStyle: 'none', fontWeight: 500, cursor: 'pointer' }}><i onClick={() => messageIsChecked(info.id)}>{info.sender} kommentoi kuvaasi {info.image}</i></li>\r\n                            </ul>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const exit = () => {\r\n        localStorage.clear();\r\n        setUser('Vieras');\r\n        onRouteChange('/home')\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"nav-wrapper\">\r\n                <nav id=\"nav\">\r\n                    <div className=\"nav-inner\">\r\n                        <Drawertoggle showSidebar={showSidebar} setShowsidebar={setShowsidebar} />\r\n                        {showSidebar ? <Sidedrawer user={user} onRouteChange={onRouteChange} setShowsidebar={setShowsidebar} setUser={setUser} /> : null}\r\n                        {user !== 'Vieras' ?\r\n                            <div>\r\n                                <span id=\"username\">{user}</span>\r\n                                <div className=\"newMessagesSmallDevice\" onClick={() => showMessageSwitch()}>Uudet viestit: <button className=\"newMessagesNumber\">{getNumberOfNewMessages()}</button></div>\r\n                                <div className=\"newMessagesList\">\r\n                                    <div className=\"newMessageListText\">\r\n                                        {showmessageinfo ? getNewMessageInfo() : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div> : null}\r\n                        {user !== 'Vieras' ?\r\n                            <div className=\"nav-links\">\r\n                                <span id=\"link\" onClick={() => onRouteChange('/home')}>Etusivu</span>\r\n                                <span id=\"link\" onClick={() => onRouteChange('/profile')}>Profiili</span>\r\n                                <div className=\"newMessages\">Uudet viestit: <button className=\"newMessagesNumber\" onClick={() => showMessageSwitch()}>{getNumberOfNewMessages()}</button></div>\r\n                            </div> :\r\n                            <div className=\"nav-links\">\r\n                                <span id=\"link\" onClick={() => onRouteChange('/home')}>Etusivu</span>\r\n                            </div>\r\n                        }\r\n                        {user !== 'Vieras' ?\r\n                            <div className=\"nav-right\">\r\n                                <span id=\"link\" onClick={() => exit()}>Kirjaudu ulos</span>\r\n                            </div> :\r\n                            <div className=\"nav-right\">\r\n                                <span id=\"link\" onClick={() => onRouteChange('/signin')}>Kirjaudu</span>\r\n                                <span id=\"link\" onClick={() => onRouteChange('/register')}>Rekisteröidy!</span>\r\n                            </div>}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\messageForm.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\drawertoggle.js",["64"],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\Drawertoggle.js",[],"C:\\Users\\Ville\\Desktop\\sm-frontend\\social media\\src\\components\\SideDrawer\\Sidedrawer.js",[],["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":56,"column":6,"nodeType":"77","endLine":56,"endColumn":12,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":64,"column":29,"nodeType":"81","messageId":"82","endLine":64,"endColumn":31},{"ruleId":"75","severity":1,"message":"83","line":70,"column":6,"nodeType":"77","endLine":70,"endColumn":56,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"80","line":98,"column":29,"nodeType":"81","messageId":"82","endLine":98,"endColumn":31},{"ruleId":"71","severity":1,"message":"85","line":124,"column":5,"nodeType":"73","messageId":"74","endLine":124,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":31,"column":42,"nodeType":"81","messageId":"82","endLine":31,"endColumn":44},{"ruleId":"79","severity":1,"message":"86","line":51,"column":43,"nodeType":"81","messageId":"87","endLine":51,"endColumn":45},{"ruleId":"71","severity":1,"message":"88","line":4,"column":7,"nodeType":"73","messageId":"74","endLine":4,"endColumn":19},{"ruleId":"67","replacedBy":"89"},{"ruleId":"69","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'WriteMessage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["93"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'addresses'. Either include it or remove the dependency array.",["94"],"'messagesToRender' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Drawertoggle' is assigned a value but never used.",["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [user, users]",{"range":"99","text":"100"},"Update the dependencies array to be: [imageLoaded, user, profileUpdate, loading, route, addresses]",{"range":"101","text":"102"},[1717,1723],"[user, users]",[2149,2199],"[imageLoaded, user, profileUpdate, loading, route, addresses]"]